{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\trivter\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from \"openai\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nvar count = 0;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    id: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"inner-root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nasync function newTwit() {\n  const newdiv = document.createElement(\"div\");\n  var ids = \"div\" + count;\n  newdiv.id = ids;\n  count++;\n  const completion = await openai.createCompletion(\"text-davinci-001\", {\n    prompt: \"Tell me a trivia fact about birds\",\n    temperature: 0.8\n  });\n  var triv = completion.data.choices[0].text;\n\n  const twit = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: triv\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  const root = document.getElementById('inner-root');\n  root.appendChild(newdiv);\n  ReactDOM.render(twit, document.getElementById(ids));\n}\n\nsetInterval(newTwit, 5000);\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/GitHub/trivter/src/App.js"],"names":["logo","useState","Configuration","OpenAIApi","ReactDOM","configuration","apiKey","openai","count","App","newTwit","newdiv","document","createElement","ids","id","completion","createCompletion","prompt","temperature","triv","data","choices","text","twit","root","getElementById","appendChild","render","setInterval"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,aAAa,GAAG,IAAIH,aAAJ,CAAkB;AACtCI,EAAAA,MAAM,EAAE;AAD8B,CAAlB,CAAtB;AAGA,MAAMC,MAAM,GAAG,IAAIJ,SAAJ,CAAcE,aAAd,CAAf;AACA,IAAIG,KAAK,GAAG,CAAZ;;AAGA,SAASC,GAAT,GAAe;AAEb,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,MAA/B;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAPQA,G;;AAST,eAAeC,OAAf,GAAyB;AACvB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACA,MAAIC,GAAG,GAAG,QAAQN,KAAlB;AACAG,EAAAA,MAAM,CAACI,EAAP,GAAYD,GAAZ;AACAN,EAAAA,KAAK;AACL,QAAMQ,UAAU,GAAG,MAAMT,MAAM,CAACU,gBAAP,CAAwB,kBAAxB,EAA4C;AACnEC,IAAAA,MAAM,EAAE,mCAD2D;AAEnEC,IAAAA,WAAW,EAAE;AAFsD,GAA5C,CAAzB;AAIA,MAAIC,IAAI,GAAGJ,UAAU,CAACK,IAAX,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC,IAAtC;;AACA,QAAMC,IAAI,gBACR;AAAA,cAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,QAAMK,IAAI,GAAGb,QAAQ,CAACc,cAAT,CAAwB,YAAxB,CAAb;AACAD,EAAAA,IAAI,CAACE,WAAL,CAAiBhB,MAAjB;AACAP,EAAAA,QAAQ,CAACwB,MAAT,CAAgBJ,IAAhB,EAAsBZ,QAAQ,CAACc,cAAT,CAAwBZ,GAAxB,CAAtB;AACD;;AAEDe,WAAW,CAACnB,OAAD,EAAU,IAAV,CAAX;AAEA,eAAeD,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { Configuration, OpenAIApi } from \"openai\";\nimport ReactDOM from 'react-dom';\n\nconst configuration = new Configuration({\n  apiKey: \"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\",\n});\nconst openai = new OpenAIApi(configuration);\nvar count = 0;\n\n\nfunction App() {\n\n  return (\n    <div className=\"App-header\" id='root'>\n      <div id='inner-root'></div>\n    </div>\n  );\n}\n\nasync function newTwit() {\n  const newdiv = document.createElement(\"div\");\n  var ids = \"div\" + count;\n  newdiv.id = ids;\n  count++;\n  const completion = await openai.createCompletion(\"text-davinci-001\", {\n    prompt: \"Tell me a trivia fact about birds\",\n    temperature: 0.8,\n  });\n  var triv = completion.data.choices[0].text;\n  const twit = (\n    <div>{triv}\n    </div>\n  );\n  const root = document.getElementById('inner-root');\n  root.appendChild(newdiv);\n  ReactDOM.render(twit, document.getElementById(ids));\n}\n\nsetInterval(newTwit, 5000);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}